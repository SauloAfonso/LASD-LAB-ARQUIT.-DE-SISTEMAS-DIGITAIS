
Exer_2_SoftPWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000468  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000799  00000000  00000000  0000054c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000069d  00000000  00000000  00000ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002be  00000000  00000000  00001382  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001640  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ae  00000000  00000000  00001664  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000016a  00000000  00000000  00001a12  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 32 02 	jmp	0x464	; 0x464 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRB = 0b00100000; // Habilita o pino PB5 como saída
  80:	80 e2       	ldi	r24, 0x20	; 32
  82:	84 b9       	out	0x04, r24	; 4
	while(1)
	{
		int T = 32;
		int tHigh = dutyCycle*T;

		PORTB = 0b00100000;// Pino PB5 em nível alto
  84:	85 b9       	out	0x05, r24	; 5
	float dutyCycle = 0.01;
	
	while(1)
	{
		int T = 32;
		int tHigh = dutyCycle*T;
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	70 e0       	ldi	r23, 0x00	; 0
#include <util/delay.h>

int main(void)
{
	DDRB = 0b00100000; // Habilita o pino PB5 como saída
	float dutyCycle = 0.01;
  8a:	0a e0       	ldi	r16, 0x0A	; 10
  8c:	17 ed       	ldi	r17, 0xD7	; 215
  8e:	d3 e2       	ldi	r29, 0x23	; 35
  90:	cc e3       	ldi	r28, 0x3C	; 60
	while(1)
	{
		int T = 32;
		int tHigh = dutyCycle*T;

		PORTB = 0b00100000;// Pino PB5 em nível alto
  92:	68 94       	set
  94:	bb 24       	eor	r11, r11
  96:	b5 f8       	bld	r11, 5
		{
			dutyCycle += 0.01;
		} 
		else
		{
			dutyCycle = 0.01;
  98:	0f 2e       	mov	r0, r31
  9a:	fa e0       	ldi	r31, 0x0A	; 10
  9c:	cf 2e       	mov	r12, r31
  9e:	f0 2d       	mov	r31, r0
  a0:	0f 2e       	mov	r0, r31
  a2:	f7 ed       	ldi	r31, 0xD7	; 215
  a4:	df 2e       	mov	r13, r31
  a6:	f0 2d       	mov	r31, r0
  a8:	0f 2e       	mov	r0, r31
  aa:	f3 e2       	ldi	r31, 0x23	; 35
  ac:	ef 2e       	mov	r14, r31
  ae:	f0 2d       	mov	r31, r0
  b0:	0f 2e       	mov	r0, r31
  b2:	fc e3       	ldi	r31, 0x3C	; 60
  b4:	ff 2e       	mov	r15, r31
  b6:	f0 2d       	mov	r31, r0
  b8:	0c c0       	rjmp	.+24     	; 0xd2 <main+0x52>
	{
		int T = 32;
		int tHigh = dutyCycle*T;

		PORTB = 0b00100000;// Pino PB5 em nível alto
		for (int i = 0; i < tHigh; i++)
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	ef e9       	ldi	r30, 0x9F	; 159
  c0:	ff e0       	ldi	r31, 0x0F	; 15
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x42>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x48>
  c8:	00 00       	nop
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	68 17       	cp	r22, r24
  ce:	79 07       	cpc	r23, r25
  d0:	b1 f7       	brne	.-20     	; 0xbe <main+0x3e>
		{
			_delay_ms(1);
		}

		PORTB = 0b00000000;// Pino PB5 em nível baixo
  d2:	15 b8       	out	0x05, r1	; 5
		for (int j = tHigh; j < T; j++)
  d4:	60 32       	cpi	r22, 0x20	; 32
  d6:	71 05       	cpc	r23, r1
  d8:	5c f4       	brge	.+22     	; 0xf0 <main+0x70>
  da:	8f e9       	ldi	r24, 0x9F	; 159
  dc:	9f e0       	ldi	r25, 0x0F	; 15
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <main+0x5e>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x64>
  e4:	00 00       	nop
  e6:	6f 5f       	subi	r22, 0xFF	; 255
  e8:	7f 4f       	sbci	r23, 0xFF	; 255
  ea:	60 32       	cpi	r22, 0x20	; 32
  ec:	71 05       	cpc	r23, r1
  ee:	a9 f7       	brne	.-22     	; 0xda <main+0x5a>
		{
			_delay_ms(1);
		}
		
		if (dutyCycle < 1)
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	40 e8       	ldi	r20, 0x80	; 128
  f6:	5f e3       	ldi	r21, 0x3F	; 63
  f8:	60 2f       	mov	r22, r16
  fa:	71 2f       	mov	r23, r17
  fc:	8d 2f       	mov	r24, r29
  fe:	9c 2f       	mov	r25, r28
 100:	0e 94 15 01 	call	0x22a	; 0x22a <__cmpsf2>
 104:	88 23       	and	r24, r24
 106:	e4 f4       	brge	.+56     	; 0x140 <main+0xc0>
		{
			dutyCycle += 0.01;
 108:	2c 2d       	mov	r18, r12
 10a:	3d 2d       	mov	r19, r13
 10c:	4e 2d       	mov	r20, r14
 10e:	5f 2d       	mov	r21, r15
 110:	60 2f       	mov	r22, r16
 112:	71 2f       	mov	r23, r17
 114:	8d 2f       	mov	r24, r29
 116:	9c 2f       	mov	r25, r28
 118:	0e 94 a9 00 	call	0x152	; 0x152 <__addsf3>
 11c:	06 2f       	mov	r16, r22
 11e:	17 2f       	mov	r17, r23
 120:	d8 2f       	mov	r29, r24
 122:	c9 2f       	mov	r28, r25
	float dutyCycle = 0.01;
	
	while(1)
	{
		int T = 32;
		int tHigh = dutyCycle*T;
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	40 e0       	ldi	r20, 0x00	; 0
 12a:	52 e4       	ldi	r21, 0x42	; 66
 12c:	0e 94 c5 01 	call	0x38a	; 0x38a <__mulsf3>
 130:	0e 94 1a 01 	call	0x234	; 0x234 <__fixsfsi>

		PORTB = 0b00100000;// Pino PB5 em nível alto
 134:	b5 b8       	out	0x05, r11	; 5
		for (int i = 0; i < tHigh; i++)
 136:	16 16       	cp	r1, r22
 138:	17 06       	cpc	r1, r23
 13a:	0c f4       	brge	.+2      	; 0x13e <main+0xbe>
 13c:	be cf       	rjmp	.-132    	; 0xba <main+0x3a>
 13e:	c9 cf       	rjmp	.-110    	; 0xd2 <main+0x52>
	while(1)
	{
		int T = 32;
		int tHigh = dutyCycle*T;

		PORTB = 0b00100000;// Pino PB5 em nível alto
 140:	b5 b8       	out	0x05, r11	; 5
		{
			dutyCycle += 0.01;
		} 
		else
		{
			dutyCycle = 0.01;
 142:	0c 2d       	mov	r16, r12
 144:	1d 2d       	mov	r17, r13
 146:	de 2d       	mov	r29, r14
 148:	cf 2d       	mov	r28, r15
	float dutyCycle = 0.01;
	
	while(1)
	{
		int T = 32;
		int tHigh = dutyCycle*T;
 14a:	60 e0       	ldi	r22, 0x00	; 0
 14c:	70 e0       	ldi	r23, 0x00	; 0
 14e:	c1 cf       	rjmp	.-126    	; 0xd2 <main+0x52>

00000150 <__subsf3>:
 150:	50 58       	subi	r21, 0x80	; 128

00000152 <__addsf3>:
 152:	bb 27       	eor	r27, r27
 154:	aa 27       	eor	r26, r26
 156:	0e 94 c0 00 	call	0x180	; 0x180 <__addsf3x>
 15a:	0c 94 8b 01 	jmp	0x316	; 0x316 <__fp_round>
 15e:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__fp_pscA>
 162:	38 f0       	brcs	.+14     	; 0x172 <__addsf3+0x20>
 164:	0e 94 84 01 	call	0x308	; 0x308 <__fp_pscB>
 168:	20 f0       	brcs	.+8      	; 0x172 <__addsf3+0x20>
 16a:	39 f4       	brne	.+14     	; 0x17a <__addsf3+0x28>
 16c:	9f 3f       	cpi	r25, 0xFF	; 255
 16e:	19 f4       	brne	.+6      	; 0x176 <__addsf3+0x24>
 170:	26 f4       	brtc	.+8      	; 0x17a <__addsf3+0x28>
 172:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__fp_nan>
 176:	0e f4       	brtc	.+2      	; 0x17a <__addsf3+0x28>
 178:	e0 95       	com	r30
 17a:	e7 fb       	bst	r30, 7
 17c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__fp_inf>

00000180 <__addsf3x>:
 180:	e9 2f       	mov	r30, r25
 182:	0e 94 9c 01 	call	0x338	; 0x338 <__fp_split3>
 186:	58 f3       	brcs	.-42     	; 0x15e <__addsf3+0xc>
 188:	ba 17       	cp	r27, r26
 18a:	62 07       	cpc	r22, r18
 18c:	73 07       	cpc	r23, r19
 18e:	84 07       	cpc	r24, r20
 190:	95 07       	cpc	r25, r21
 192:	20 f0       	brcs	.+8      	; 0x19c <__addsf3x+0x1c>
 194:	79 f4       	brne	.+30     	; 0x1b4 <__addsf3x+0x34>
 196:	a6 f5       	brtc	.+104    	; 0x200 <__addsf3x+0x80>
 198:	0c 94 be 01 	jmp	0x37c	; 0x37c <__fp_zero>
 19c:	0e f4       	brtc	.+2      	; 0x1a0 <__addsf3x+0x20>
 19e:	e0 95       	com	r30
 1a0:	0b 2e       	mov	r0, r27
 1a2:	ba 2f       	mov	r27, r26
 1a4:	a0 2d       	mov	r26, r0
 1a6:	0b 01       	movw	r0, r22
 1a8:	b9 01       	movw	r22, r18
 1aa:	90 01       	movw	r18, r0
 1ac:	0c 01       	movw	r0, r24
 1ae:	ca 01       	movw	r24, r20
 1b0:	a0 01       	movw	r20, r0
 1b2:	11 24       	eor	r1, r1
 1b4:	ff 27       	eor	r31, r31
 1b6:	59 1b       	sub	r21, r25
 1b8:	99 f0       	breq	.+38     	; 0x1e0 <__addsf3x+0x60>
 1ba:	59 3f       	cpi	r21, 0xF9	; 249
 1bc:	50 f4       	brcc	.+20     	; 0x1d2 <__addsf3x+0x52>
 1be:	50 3e       	cpi	r21, 0xE0	; 224
 1c0:	68 f1       	brcs	.+90     	; 0x21c <__addsf3x+0x9c>
 1c2:	1a 16       	cp	r1, r26
 1c4:	f0 40       	sbci	r31, 0x00	; 0
 1c6:	a2 2f       	mov	r26, r18
 1c8:	23 2f       	mov	r18, r19
 1ca:	34 2f       	mov	r19, r20
 1cc:	44 27       	eor	r20, r20
 1ce:	58 5f       	subi	r21, 0xF8	; 248
 1d0:	f3 cf       	rjmp	.-26     	; 0x1b8 <__addsf3x+0x38>
 1d2:	46 95       	lsr	r20
 1d4:	37 95       	ror	r19
 1d6:	27 95       	ror	r18
 1d8:	a7 95       	ror	r26
 1da:	f0 40       	sbci	r31, 0x00	; 0
 1dc:	53 95       	inc	r21
 1de:	c9 f7       	brne	.-14     	; 0x1d2 <__addsf3x+0x52>
 1e0:	7e f4       	brtc	.+30     	; 0x200 <__addsf3x+0x80>
 1e2:	1f 16       	cp	r1, r31
 1e4:	ba 0b       	sbc	r27, r26
 1e6:	62 0b       	sbc	r22, r18
 1e8:	73 0b       	sbc	r23, r19
 1ea:	84 0b       	sbc	r24, r20
 1ec:	ba f0       	brmi	.+46     	; 0x21c <__addsf3x+0x9c>
 1ee:	91 50       	subi	r25, 0x01	; 1
 1f0:	a1 f0       	breq	.+40     	; 0x21a <__addsf3x+0x9a>
 1f2:	ff 0f       	add	r31, r31
 1f4:	bb 1f       	adc	r27, r27
 1f6:	66 1f       	adc	r22, r22
 1f8:	77 1f       	adc	r23, r23
 1fa:	88 1f       	adc	r24, r24
 1fc:	c2 f7       	brpl	.-16     	; 0x1ee <__addsf3x+0x6e>
 1fe:	0e c0       	rjmp	.+28     	; 0x21c <__addsf3x+0x9c>
 200:	ba 0f       	add	r27, r26
 202:	62 1f       	adc	r22, r18
 204:	73 1f       	adc	r23, r19
 206:	84 1f       	adc	r24, r20
 208:	48 f4       	brcc	.+18     	; 0x21c <__addsf3x+0x9c>
 20a:	87 95       	ror	r24
 20c:	77 95       	ror	r23
 20e:	67 95       	ror	r22
 210:	b7 95       	ror	r27
 212:	f7 95       	ror	r31
 214:	9e 3f       	cpi	r25, 0xFE	; 254
 216:	08 f0       	brcs	.+2      	; 0x21a <__addsf3x+0x9a>
 218:	b0 cf       	rjmp	.-160    	; 0x17a <__addsf3+0x28>
 21a:	93 95       	inc	r25
 21c:	88 0f       	add	r24, r24
 21e:	08 f0       	brcs	.+2      	; 0x222 <__addsf3x+0xa2>
 220:	99 27       	eor	r25, r25
 222:	ee 0f       	add	r30, r30
 224:	97 95       	ror	r25
 226:	87 95       	ror	r24
 228:	08 95       	ret

0000022a <__cmpsf2>:
 22a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <__fp_cmp>
 22e:	08 f4       	brcc	.+2      	; 0x232 <__cmpsf2+0x8>
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	08 95       	ret

00000234 <__fixsfsi>:
 234:	0e 94 21 01 	call	0x242	; 0x242 <__fixunssfsi>
 238:	68 94       	set
 23a:	b1 11       	cpse	r27, r1
 23c:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_szero>
 240:	08 95       	ret

00000242 <__fixunssfsi>:
 242:	0e 94 a4 01 	call	0x348	; 0x348 <__fp_splitA>
 246:	88 f0       	brcs	.+34     	; 0x26a <__fixunssfsi+0x28>
 248:	9f 57       	subi	r25, 0x7F	; 127
 24a:	98 f0       	brcs	.+38     	; 0x272 <__fixunssfsi+0x30>
 24c:	b9 2f       	mov	r27, r25
 24e:	99 27       	eor	r25, r25
 250:	b7 51       	subi	r27, 0x17	; 23
 252:	b0 f0       	brcs	.+44     	; 0x280 <__fixunssfsi+0x3e>
 254:	e1 f0       	breq	.+56     	; 0x28e <__fixunssfsi+0x4c>
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	88 1f       	adc	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	1a f0       	brmi	.+6      	; 0x266 <__fixunssfsi+0x24>
 260:	ba 95       	dec	r27
 262:	c9 f7       	brne	.-14     	; 0x256 <__fixunssfsi+0x14>
 264:	14 c0       	rjmp	.+40     	; 0x28e <__fixunssfsi+0x4c>
 266:	b1 30       	cpi	r27, 0x01	; 1
 268:	91 f0       	breq	.+36     	; 0x28e <__fixunssfsi+0x4c>
 26a:	0e 94 be 01 	call	0x37c	; 0x37c <__fp_zero>
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	08 95       	ret
 272:	0c 94 be 01 	jmp	0x37c	; 0x37c <__fp_zero>
 276:	67 2f       	mov	r22, r23
 278:	78 2f       	mov	r23, r24
 27a:	88 27       	eor	r24, r24
 27c:	b8 5f       	subi	r27, 0xF8	; 248
 27e:	39 f0       	breq	.+14     	; 0x28e <__fixunssfsi+0x4c>
 280:	b9 3f       	cpi	r27, 0xF9	; 249
 282:	cc f3       	brlt	.-14     	; 0x276 <__fixunssfsi+0x34>
 284:	86 95       	lsr	r24
 286:	77 95       	ror	r23
 288:	67 95       	ror	r22
 28a:	b3 95       	inc	r27
 28c:	d9 f7       	brne	.-10     	; 0x284 <__fixunssfsi+0x42>
 28e:	3e f4       	brtc	.+14     	; 0x29e <__fixunssfsi+0x5c>
 290:	90 95       	com	r25
 292:	80 95       	com	r24
 294:	70 95       	com	r23
 296:	61 95       	neg	r22
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	8f 4f       	sbci	r24, 0xFF	; 255
 29c:	9f 4f       	sbci	r25, 0xFF	; 255
 29e:	08 95       	ret

000002a0 <__fp_cmp>:
 2a0:	99 0f       	add	r25, r25
 2a2:	00 08       	sbc	r0, r0
 2a4:	55 0f       	add	r21, r21
 2a6:	aa 0b       	sbc	r26, r26
 2a8:	e0 e8       	ldi	r30, 0x80	; 128
 2aa:	fe ef       	ldi	r31, 0xFE	; 254
 2ac:	16 16       	cp	r1, r22
 2ae:	17 06       	cpc	r1, r23
 2b0:	e8 07       	cpc	r30, r24
 2b2:	f9 07       	cpc	r31, r25
 2b4:	c0 f0       	brcs	.+48     	; 0x2e6 <__fp_cmp+0x46>
 2b6:	12 16       	cp	r1, r18
 2b8:	13 06       	cpc	r1, r19
 2ba:	e4 07       	cpc	r30, r20
 2bc:	f5 07       	cpc	r31, r21
 2be:	98 f0       	brcs	.+38     	; 0x2e6 <__fp_cmp+0x46>
 2c0:	62 1b       	sub	r22, r18
 2c2:	73 0b       	sbc	r23, r19
 2c4:	84 0b       	sbc	r24, r20
 2c6:	95 0b       	sbc	r25, r21
 2c8:	39 f4       	brne	.+14     	; 0x2d8 <__fp_cmp+0x38>
 2ca:	0a 26       	eor	r0, r26
 2cc:	61 f0       	breq	.+24     	; 0x2e6 <__fp_cmp+0x46>
 2ce:	23 2b       	or	r18, r19
 2d0:	24 2b       	or	r18, r20
 2d2:	25 2b       	or	r18, r21
 2d4:	21 f4       	brne	.+8      	; 0x2de <__fp_cmp+0x3e>
 2d6:	08 95       	ret
 2d8:	0a 26       	eor	r0, r26
 2da:	09 f4       	brne	.+2      	; 0x2de <__fp_cmp+0x3e>
 2dc:	a1 40       	sbci	r26, 0x01	; 1
 2de:	a6 95       	lsr	r26
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	81 1d       	adc	r24, r1
 2e4:	81 1d       	adc	r24, r1
 2e6:	08 95       	ret

000002e8 <__fp_inf>:
 2e8:	97 f9       	bld	r25, 7
 2ea:	9f 67       	ori	r25, 0x7F	; 127
 2ec:	80 e8       	ldi	r24, 0x80	; 128
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	60 e0       	ldi	r22, 0x00	; 0
 2f2:	08 95       	ret

000002f4 <__fp_nan>:
 2f4:	9f ef       	ldi	r25, 0xFF	; 255
 2f6:	80 ec       	ldi	r24, 0xC0	; 192
 2f8:	08 95       	ret

000002fa <__fp_pscA>:
 2fa:	00 24       	eor	r0, r0
 2fc:	0a 94       	dec	r0
 2fe:	16 16       	cp	r1, r22
 300:	17 06       	cpc	r1, r23
 302:	18 06       	cpc	r1, r24
 304:	09 06       	cpc	r0, r25
 306:	08 95       	ret

00000308 <__fp_pscB>:
 308:	00 24       	eor	r0, r0
 30a:	0a 94       	dec	r0
 30c:	12 16       	cp	r1, r18
 30e:	13 06       	cpc	r1, r19
 310:	14 06       	cpc	r1, r20
 312:	05 06       	cpc	r0, r21
 314:	08 95       	ret

00000316 <__fp_round>:
 316:	09 2e       	mov	r0, r25
 318:	03 94       	inc	r0
 31a:	00 0c       	add	r0, r0
 31c:	11 f4       	brne	.+4      	; 0x322 <__fp_round+0xc>
 31e:	88 23       	and	r24, r24
 320:	52 f0       	brmi	.+20     	; 0x336 <__fp_round+0x20>
 322:	bb 0f       	add	r27, r27
 324:	40 f4       	brcc	.+16     	; 0x336 <__fp_round+0x20>
 326:	bf 2b       	or	r27, r31
 328:	11 f4       	brne	.+4      	; 0x32e <__fp_round+0x18>
 32a:	60 ff       	sbrs	r22, 0
 32c:	04 c0       	rjmp	.+8      	; 0x336 <__fp_round+0x20>
 32e:	6f 5f       	subi	r22, 0xFF	; 255
 330:	7f 4f       	sbci	r23, 0xFF	; 255
 332:	8f 4f       	sbci	r24, 0xFF	; 255
 334:	9f 4f       	sbci	r25, 0xFF	; 255
 336:	08 95       	ret

00000338 <__fp_split3>:
 338:	57 fd       	sbrc	r21, 7
 33a:	90 58       	subi	r25, 0x80	; 128
 33c:	44 0f       	add	r20, r20
 33e:	55 1f       	adc	r21, r21
 340:	59 f0       	breq	.+22     	; 0x358 <__fp_splitA+0x10>
 342:	5f 3f       	cpi	r21, 0xFF	; 255
 344:	71 f0       	breq	.+28     	; 0x362 <__fp_splitA+0x1a>
 346:	47 95       	ror	r20

00000348 <__fp_splitA>:
 348:	88 0f       	add	r24, r24
 34a:	97 fb       	bst	r25, 7
 34c:	99 1f       	adc	r25, r25
 34e:	61 f0       	breq	.+24     	; 0x368 <__fp_splitA+0x20>
 350:	9f 3f       	cpi	r25, 0xFF	; 255
 352:	79 f0       	breq	.+30     	; 0x372 <__fp_splitA+0x2a>
 354:	87 95       	ror	r24
 356:	08 95       	ret
 358:	12 16       	cp	r1, r18
 35a:	13 06       	cpc	r1, r19
 35c:	14 06       	cpc	r1, r20
 35e:	55 1f       	adc	r21, r21
 360:	f2 cf       	rjmp	.-28     	; 0x346 <__fp_split3+0xe>
 362:	46 95       	lsr	r20
 364:	f1 df       	rcall	.-30     	; 0x348 <__fp_splitA>
 366:	08 c0       	rjmp	.+16     	; 0x378 <__fp_splitA+0x30>
 368:	16 16       	cp	r1, r22
 36a:	17 06       	cpc	r1, r23
 36c:	18 06       	cpc	r1, r24
 36e:	99 1f       	adc	r25, r25
 370:	f1 cf       	rjmp	.-30     	; 0x354 <__fp_splitA+0xc>
 372:	86 95       	lsr	r24
 374:	71 05       	cpc	r23, r1
 376:	61 05       	cpc	r22, r1
 378:	08 94       	sec
 37a:	08 95       	ret

0000037c <__fp_zero>:
 37c:	e8 94       	clt

0000037e <__fp_szero>:
 37e:	bb 27       	eor	r27, r27
 380:	66 27       	eor	r22, r22
 382:	77 27       	eor	r23, r23
 384:	cb 01       	movw	r24, r22
 386:	97 f9       	bld	r25, 7
 388:	08 95       	ret

0000038a <__mulsf3>:
 38a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__mulsf3x>
 38e:	0c 94 8b 01 	jmp	0x316	; 0x316 <__fp_round>
 392:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__fp_pscA>
 396:	38 f0       	brcs	.+14     	; 0x3a6 <__mulsf3+0x1c>
 398:	0e 94 84 01 	call	0x308	; 0x308 <__fp_pscB>
 39c:	20 f0       	brcs	.+8      	; 0x3a6 <__mulsf3+0x1c>
 39e:	95 23       	and	r25, r21
 3a0:	11 f0       	breq	.+4      	; 0x3a6 <__mulsf3+0x1c>
 3a2:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__fp_inf>
 3a6:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__fp_nan>
 3aa:	11 24       	eor	r1, r1
 3ac:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_szero>

000003b0 <__mulsf3x>:
 3b0:	0e 94 9c 01 	call	0x338	; 0x338 <__fp_split3>
 3b4:	70 f3       	brcs	.-36     	; 0x392 <__mulsf3+0x8>

000003b6 <__mulsf3_pse>:
 3b6:	95 9f       	mul	r25, r21
 3b8:	c1 f3       	breq	.-16     	; 0x3aa <__mulsf3+0x20>
 3ba:	95 0f       	add	r25, r21
 3bc:	50 e0       	ldi	r21, 0x00	; 0
 3be:	55 1f       	adc	r21, r21
 3c0:	62 9f       	mul	r22, r18
 3c2:	f0 01       	movw	r30, r0
 3c4:	72 9f       	mul	r23, r18
 3c6:	bb 27       	eor	r27, r27
 3c8:	f0 0d       	add	r31, r0
 3ca:	b1 1d       	adc	r27, r1
 3cc:	63 9f       	mul	r22, r19
 3ce:	aa 27       	eor	r26, r26
 3d0:	f0 0d       	add	r31, r0
 3d2:	b1 1d       	adc	r27, r1
 3d4:	aa 1f       	adc	r26, r26
 3d6:	64 9f       	mul	r22, r20
 3d8:	66 27       	eor	r22, r22
 3da:	b0 0d       	add	r27, r0
 3dc:	a1 1d       	adc	r26, r1
 3de:	66 1f       	adc	r22, r22
 3e0:	82 9f       	mul	r24, r18
 3e2:	22 27       	eor	r18, r18
 3e4:	b0 0d       	add	r27, r0
 3e6:	a1 1d       	adc	r26, r1
 3e8:	62 1f       	adc	r22, r18
 3ea:	73 9f       	mul	r23, r19
 3ec:	b0 0d       	add	r27, r0
 3ee:	a1 1d       	adc	r26, r1
 3f0:	62 1f       	adc	r22, r18
 3f2:	83 9f       	mul	r24, r19
 3f4:	a0 0d       	add	r26, r0
 3f6:	61 1d       	adc	r22, r1
 3f8:	22 1f       	adc	r18, r18
 3fa:	74 9f       	mul	r23, r20
 3fc:	33 27       	eor	r19, r19
 3fe:	a0 0d       	add	r26, r0
 400:	61 1d       	adc	r22, r1
 402:	23 1f       	adc	r18, r19
 404:	84 9f       	mul	r24, r20
 406:	60 0d       	add	r22, r0
 408:	21 1d       	adc	r18, r1
 40a:	82 2f       	mov	r24, r18
 40c:	76 2f       	mov	r23, r22
 40e:	6a 2f       	mov	r22, r26
 410:	11 24       	eor	r1, r1
 412:	9f 57       	subi	r25, 0x7F	; 127
 414:	50 40       	sbci	r21, 0x00	; 0
 416:	9a f0       	brmi	.+38     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 418:	f1 f0       	breq	.+60     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 41a:	88 23       	and	r24, r24
 41c:	4a f0       	brmi	.+18     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41e:	ee 0f       	add	r30, r30
 420:	ff 1f       	adc	r31, r31
 422:	bb 1f       	adc	r27, r27
 424:	66 1f       	adc	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	88 1f       	adc	r24, r24
 42a:	91 50       	subi	r25, 0x01	; 1
 42c:	50 40       	sbci	r21, 0x00	; 0
 42e:	a9 f7       	brne	.-22     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 430:	9e 3f       	cpi	r25, 0xFE	; 254
 432:	51 05       	cpc	r21, r1
 434:	80 f0       	brcs	.+32     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 436:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__fp_inf>
 43a:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_szero>
 43e:	5f 3f       	cpi	r21, 0xFF	; 255
 440:	e4 f3       	brlt	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 442:	98 3e       	cpi	r25, 0xE8	; 232
 444:	d4 f3       	brlt	.-12     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 446:	86 95       	lsr	r24
 448:	77 95       	ror	r23
 44a:	67 95       	ror	r22
 44c:	b7 95       	ror	r27
 44e:	f7 95       	ror	r31
 450:	e7 95       	ror	r30
 452:	9f 5f       	subi	r25, 0xFF	; 255
 454:	c1 f7       	brne	.-16     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 456:	fe 2b       	or	r31, r30
 458:	88 0f       	add	r24, r24
 45a:	91 1d       	adc	r25, r1
 45c:	96 95       	lsr	r25
 45e:	87 95       	ror	r24
 460:	97 f9       	bld	r25, 7
 462:	08 95       	ret

00000464 <_exit>:
 464:	f8 94       	cli

00000466 <__stop_program>:
 466:	ff cf       	rjmp	.-2      	; 0x466 <__stop_program>
